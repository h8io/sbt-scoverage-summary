name: Release

on:
  release:
    types: [ published ]

jobs:
  release:
    if: ${{ !github.event.release.draft && !github.event.release.prerelease }}
    runs-on: ubuntu-latest

    steps:
      - run: |
          echo "Release tag: ${{ github.event.release.tag_name }}"
          echo "Target commitish: ${{ github.event.release.target_commitish }}"

      - run: |
          TAG="${{ github.event.release.tag_name }}"
          echo "Validating tag: $TAG"

          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid tag format: '$TAG'. Expected: vMAJOR.MINOR.PATCH (e.g. v1.2.3)" >&2
            exit 1
          fi

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0

      - uses: coursier/setup-action@v1
        with:
          apps: sbt
          jvm: temurin:17

      - name: Check Sonatype token
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          curl -u "${SONATYPE_USERNAME}:${SONATYPE_PASSWORD}" \
            -H "Accept: application/json" -sSf \
            https://ossrh-staging-api.central.sonatype.com/service/local/staging/profiles >/dev/null

      - name: Import PGP key
        shell: bash
        run: |
          set -euo pipefail
          
          CLEAN="$(printf %s "$PGP_SECRET" | tr -d '\r')"
          
          if grep -q "BEGIN PGP PRIVATE KEY BLOCK" <<<"$CLEAN"; then
            printf '%s' "$CLEAN" > /tmp/private.key
          else
            printf '%s' "$CLEAN" | base64 -d > /tmp/private.key
          fi
          
          gpg --batch --import /tmp/private.key
          
          gpg --list-secret-keys
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}

      - name: Release to Maven Central
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: sbt ci-release
